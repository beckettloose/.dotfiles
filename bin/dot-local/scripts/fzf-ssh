#!/usr/bin/env zsh

# fzf-ssh
#
# Written by Beckett Loose
#
# Allows the user to quickly ssh to a specified host by fuzzy searching a list
# from a configuration file. It is recommended to bind this to a keyboard
# shortcut for easy access
#
# To Debug: DEBUG=1 fzf-ssh
#
# Currently Broken Features
#   - validate config file before execution
#   - use custom fzf options
#   - handle default user name
#   - handle non-instant mode

debug_echo() {
   if [ "$DEBUG" ]; then echo "debug: $1"; fi
}

# Set default config file location if not already set
if [[ -z $FUZZY_SSH_CONFIG_FILE ]]; then
    FUZZY_SSH_CONFIG_FILE="$HOME/.fzf-ssh.yaml"
    debug_echo "custom config location not set, using default"
fi

debug_echo "searching for config file at: ${FUZZY_SSH_CONFIG_FILE}"

if [[ -f $FUZZY_SSH_CONFIG_FILE ]]; then
    debug_echo "config file exists"
elif [[ -L $FUZZY_SSH_CONFIG_FILE ]]; then
    debug_echo "config file exists (and is a symlink)"
else
    echo "fatal: specified config file does not exist!"
    exit 1
fi

# Check that current shell is zsh
shell_base=$(basename "$SHELL")

debug_echo "\$SHELL is '$SHELL' and \$shell_base is '$shell_base'"

if ! [[ $shell_base -eq "zsh" ]]; then
    echo "fatal: current shell is not zsh!"
    exit 1
fi

# Check that yq exists
debug_echo "checking for yq"
if ! type "yq" > /dev/null; then
    echo "fatal: yq not in current path! is it installed?"
    exit 1
fi
debug_echo "found yq"

# Check that fzf exists
debug_echo "checking for fzf"
if ! type "fzf" > /dev/null; then
    echo "fatal: fzf not in current path! is it installed?"
fi
debug_echo "found fzf"

fzf_options=$(yq -r ".config.fzf_options.[]" $FUZZY_SSH_CONFIG_FILE | tr '\n' ' ')
debug_echo "custom fzf args: $fzf_options"

# get hosts and send to fzf
choice=$(yq -r ".hosts.[]" $FUZZY_SSH_CONFIG_FILE | FZF_DEFAULT_OPTS="--height 40% --layout reverse --border --border-label=\"Fuzzy SSH\"" fzf)

# make sure we selected something
if ! [[ -n "$choice" ]]; then
    debug_echo "fzf output length is zero, no option was selected"
    echo "fatal: no host selected"
    exit 1
fi

instant=$(yq ".config.defaults.instant" $FUZZY_SSH_CONFIG_FILE)
debug_echo "\$instant is '$instant'"

if [[ $instant == "true" ]]; then
    ssh "$choice"
else
    zle reset-prompt
    zle -U "ssh ${choice}"
fi

exit 0

# prepopulate command prompt with final command
if [[ -n "$choice" ]]; then
    #print -z ssh $choice
    zle -U "ssh ${choice}"
fi
